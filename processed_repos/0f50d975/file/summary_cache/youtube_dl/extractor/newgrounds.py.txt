Concise summary of the code in ./youtube-dl/youtube_dl/extractor/newgrounds.py

What it does
- Implements two extractors for the Newgrounds site:
  - NewgroundsIE: extracts individual media (audio and video) from Newgrounds.
  - NewgroundsPlaylistIE: extracts a playlist of media items from Newgrounds pages that list multiple submissions (collections, searches, etc.), delegating individual items to NewgroundsIE.

Key classes and functions
- NewgroundsIE(InfoExtractor)
  - _VALID_URL: matches individual media pages
    - /audio/listen/<id> or /portal/view/<id>
  - _real_extract(url):
    - Retrieves the page, extracts:
      - id (media_id)
      - title (from the <title> tag)
      - media_url: the primary media URL found in a JSON field on the page
      - formats: initial format with the source URL, plus additional formats derived from max_resolution
        - If max_resolution is present, derives additional .<n>p.mp4 formats by appending the resolution to the base media URL (base derived by removing extension)
        - Keeps source format as format_id 'source'
        - Uses _check_formats and _sort_formats to validate and order formats
      - uploader (via flexible regex, non-fatal)
      - timestamp (from Uploaded field, parsed via unified_timestamp)
      - duration (parsed via parse_duration from a Song field)
      - filesize_approx (parsed via parse_filesize from the Song block)
      - If only one format is present, attaches filesize_approx to that format
      - If the page mentions <dd>Song, sets vcodec to 'none' (audio-only case)
    - Returns a dict with id, title, uploader, timestamp, duration, and formats
- NewgroundsPlaylistIE(InfoExtractor)
  - _VALID_URL: matches playlist/collection-like pages and certain search results
  - _real_extract(url):
    - playlist_id = matched id
    - Downloads the page and extracts a title (if available)
    - Trims page to the main content column (cut left menu)
    - Scans for item links with classes item-portalsubmission or item-audiosubmission
    - For each matching entry, constructs a Newgrounds media URL and adds a result using:
      - ie=NewgroundsIE.ie_key() (delegate to the individual media extractor)
      - video_id set to the media_id
    - Returns a playlist_result with the collected entries and the playlist title/id

Key implementation details
- Media URL extraction:
  - The code locates a JSON-like "url": "..." value in the page and parses it via _parse_json.
- Dynamic formats:
  - Beyond the source URL, if max_resolution is provided, additional 360p, 720p, and 1080p formats are generated by appending .<n>p.mp4 to the base URL.
  - Uses format_id like '360p', '720p', '1080p' and sets height accordingly.
- Metadata extraction:
  - Uploader is extracted with multiple regex options (fatal=False so itâ€™s optional).
  - timestamp uses unified_timestamp on a couple of patterns that wrap the Uploaded date.
  - duration and filesize_approx are parsed from a Song-related block in the page.
- Edge handling:
  - If only one format is found, the code adds filesize_approx to that format.
  - If the page indicates a Song entry, it marks the video codec as none (audio-only).
- Playlist extraction design:
  - Filters relevant items by CSS classes (item-portalsubmission, item-audiosubmission) to ensure only valid media links are added.
  - Delegates to NewgroundsIE for each item, creating a proper playlist by aggregating those items.

Tests (_TESTS)
- Includes tests for:
  - An audio listen page with mp3 (source + possibly derived formats)
  - A portal view page with mp4, including uploader, timestamp, and upload_date
  - A portal view page where the source format is unavailable and only additional mp4 formats exist; also demonstrates skip_download behavior in tests

Overall
- The file provides robust extraction for Newgrounds media, supporting both audio/video formats directly on the page and multiple derived formats, plus a playlist extraction path that aggregates and reuses the individual media extractor.